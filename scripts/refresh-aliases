#!/usr/bin/env perl
use warnings;
use strict;
use List::MoreUtils qw(uniq);
use Net::DNS;

sub resolve {
	my ($name, $type) = @_;

	my @rr = rr($name, $type);

	return map {$_->address} rrsort($type, "address", @rr);
}

sub finalize {
	my ($target, @prefixes) = @_;

	my @ipv4s = resolve($target, "A");
	my @ipv6s = resolve($target, "AAAA");
	my $failed = !(@ipv4s || @ipv6s);

	for my $pre (uniq @prefixes) {
		print $pre."A\t$_ ; => $target\n" for @ipv4s;
		print $pre."AAAA\t$_ ; => $target\n" for @ipv6s;
		print $pre."CNAME\t. ; => $target\n" if $failed;
	}

	if ($failed) {
		warn "could not resolve '$target'\n";
	}
}

my $is_alias = 0;
my $cur_label = "";
my $cur_indent = "";
my $cur_target = "";

while (<STDIN>) {
	if (/^(\S*)(.+\s+)(A|AAAA)\s+.+\s+; => (\S+)$/) {
		my $r_label = $1;
		my $r_indent = $2;
		my $r_target = $4;
		if (!$is_alias
		    || ($r_label ne $cur_label && $r_label ne "")
		    || ($r_target ne $cur_target))
		{
			if ($is_alias) {
				finalize($cur_target, $cur_label.$cur_indent);
			}
			$is_alias = 1;
			$cur_label = $r_label;
			$cur_indent = $r_indent;
			$cur_target = $r_target;
		}
	}
	else {
		if ($is_alias) {
			finalize($cur_target, $cur_label.$cur_indent);
			$is_alias = 0;
		}
		print;
	}
}
if ($is_alias) {
	finalize($cur_target, $cur_label.$cur_indent);
}
